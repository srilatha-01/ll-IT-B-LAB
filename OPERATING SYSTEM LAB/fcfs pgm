AIM : FCFS(First come ,first served)

ALGORITHM:

 1: Start the process
 2: Accept the number of processes in the ready Queue
 3: For each process in the ready Q, assign the process id and accept the CPU burst time
 4: Set the waiting of the first process as ‘0’ and its burst time as its turn around time
 5: for each process in the Ready Q calculate 
    a. Waiting time for process(n)= waiting time of process (n-1) + Burst time of process(n-1)
    b. Turnaround time for Process(n)= waiting time of Process(n)+ Burst time for process(n) 
 6: Calculate a. Average waiting time = Total waiting Time / Number of process b. Average Turnaround time = Total Turnaround Time / Number of process
 7: Stop the process

#include<stdio.h>
 
int main()
{
    int n,bt[20],wt[20],tat[20],avwt=0,avtat=0,i,j;
    printf("Enter total number of processes(maximum 20):");
    scanf("%d",&n);
 
    printf("\nEnter Process Burst Time\n");
    for(i=0;i<n;i++)
    {
        printf("P[%d]:",i+1);
        scanf("%d",&bt[i]);
    }
 
    wt[0]=0;    
    for(i=1;i<n;i++)
    {
        wt[i]=0;
        for(j=0;j<i;j++)
            wt[i]+=bt[j];
    }
 
    printf("\nProcess\t\tBurst Time\tWaiting Time\tTurnaround Time");
    for(i=0;i<n;i++)
    {
        tat[i]=bt[i]+wt[i];
        avwt+=wt[i];
        avtat+=tat[i];
        printf("\nP[%d]\t\t%d\t\t%d\t\t%d",i+1,bt[i],wt[i],tat[i]);
    }
 
    avwt/=i;
    avtat/=i;
    printf("\n\nAverage Waiting Time:%d",avwt);
    printf("\nAverage Turnaround Time:%d",avtat);
 
    return 0;
}
